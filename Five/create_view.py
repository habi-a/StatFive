import os, sys

def create_view(apps,view,desc):

    #path = 'C:/Users/%s/Desktop/ticketing/APPS/' % os.environ['USERNAME']
    path = os.path.dirname(sys.argv[0]) + "/APPS/"
    if os.path.isdir(path+apps):
        view_file = '_'.join([e.lower() for e in view.replace(' ','').split('_')])
        view_name = view_file.capitalize()
        with open(path+'%s/Enabled_Views/%s.py'%(apps,view_file),'w') as f:
            [f.write(e+'\n')for e in ['from Libs.Front.CBV.base_view import Base_view as cbv',
                                      'from django.utils.translation import ugettext as _',
                                      'from %s.apps import %sConfig as apps'%(apps,''.join([e.capitalize() for e in apps.split('_')])),
                                      'from django.urls import reverse',
                                      'from django.http import HttpResponseRedirect',
                                      'from django.contrib import messages',
                                      '',
                                      '',
                                      '',
                                      'class %s(cbv):'%view_name,
                                      '',
                                      '    VIEW = [_("%s"),_("%s")]'%(view_name.replace('_',' '),desc),
                                      '    APPS = [apps.verbose_name,apps.desc]',
                                      '    TEMPLATE = "%s_%s.html"'%(apps,view_name),
                                      '    HTML = ""# call Libs.Front.HTML ',
                                      '    URL = "/%s/%s/"# Url of the page '%(apps.lower(),view_file),
                                      '    API = "/api/%s/"# Url of the page '% apps.lower(),
                                      '    # forms used by the view',
                                      "    # go to Libs.front.CBV to get the available value for the kwargs",
                                      "    # 's' for selectfiels",
                                      "    # 'sm' for selectmultiplefields",
                                      "    # 't' for textareafield",
                                      "    # 'c' for charfield",
                                      "    # 'f' for filefield",
                                      "    # 'fs' for filesfiled",
                                      '    FORMS = {}',
                                      '    # for getting a selection form and datatable',
                                      '    # >> selection form >>> use the Key form_selection',
                                      '    # >> datatable >>> use the Key tables',
                                      "    # exemple : PARAMETERS = {'form_selection':{'USER': False,'USERGROUP': False}",
                                      "    #                         'tables':id_table:{'ACCNT': False,'KOSTL': False,}",
                                      "    # list of fields available in Libs\Front\CBV\libs",
                                      '    PARAMETERS = {}',
                                      '    #stand for the tmp models used for datatable server side',
                                      '    #exemple   MODELS = {id_table:Tmp_analysis}' ,
                                      '    MODELS = {}',
                                      '',
                                      '    def _fill_forms(self, l_forms, *args):',
                                      "        #modificate the form needed if FORMS is filled",
                                      "        #else touch nothing",
                                      "        return l_forms",
                                      '',
                                      '    def _button_submit_form_selection(self, list_forms):',
                                      "        #serve to modificate the button generated automatically by PARAMETERS if filled",
                                      "        #else touch nothing",
                                      "        #exemple : list_forms[-1]= list_forms[-1] % (_('Submit'), 'onclick="+"\"run_datatable(event);\""+"'"+')',
                                      "        return super(%s, self)._button_submit_form_selection(list_forms)"%view_name,
                                      '',
                                      "    def _generate_datatable(self, method = 'xxxxxx'):",
                                      "        # replace xxxxxxx by the API stand for datatable",
                                      "        return super(%s, self)._generate_datatable(method)"%view_name,
                                      '',
                                      '    def post(self,request):',
                                      '        # return False if valid',

                                      '        if self.is_valid(request,',
                                      '                         self._generate_form,',
                                      '                         **self.FORMS):',
                                      "            # Failure behaviour",
                                      "            messages.error(request, _('Bad Request'))",
                                      "            return HttpResponseRedirect(reverse('%s@%s'))"%(apps,view_file),
                                      '        # successful behaviour',
                                      "        messages.success(request, _('Good request.'))",
                                      "        return HttpResponseRedirect(reverse('%s@%s'))"%(apps,view_file),]
             ]
        with open(path+'%s/templates/%s_%s.html'%(apps,apps,view_name),'w') as f:
            [f.write(e+'\n') for e in ['{% extends "base.html" %}',
                                       '{% load i18n %}',
                                       '{% load static %}',
                                       '',
                                       '{% block css %}',
                                       '{% endblock %}',
                                       '',
                                       '{% block content %}',
                                       '<div class="page-title">',
                                       '    <div class="title_left">',
                                       '        <h3>{{APPS.0}} <small>({{APPS.1}})</small></h3>',
                                       '    </div>',
                                       '</div>',
                                       '<div class="clearfix"></div>',
                                       '<div class="row">',
                                       '    <div class="col-md-12 col-sm-12 col-xs-12">',
                                       '        <div class="x_panel">',
                                       '            <div class="x_title">',
                                       '                <h2>{{VIEW.0}}  <small>({{VIEW.1}})</small></h2>',
                                       '                <ul class="nav navbar-right panel_toolbox">',
                                       '                    <li><a class="collapse-link"><i class="fa fa-chevron-up"></i></a>',
                                       '                    </li>',
                                       '                </ul>',
                                       '                <div class="clearfix"></div>',
                                       '            </div>',
                                       '            <div class="x_content">',
                                       '                <form method="POST" action="/%s/%s/">' % (apps.lower(), view_file),
                                       '                    {% csrf_token %}',
                                       '                    {% for f in l_forms|slice:"0:-1" %}',
                                       '                    <div class="form-group">',
                                       '                        {{ f }}',
                                       '                    </div>',
                                       '                    {% endfor %}',
                                       "                    {% if not '%s' in l_forms|last%}",
                                       '                        {% autoescape off %}',
				       '                    	    {{l_forms|last}}',
				       '                        {% endautoescape %}',
                                       '                    {% endif %}',
                                       '                    {% if l_forms_selection %}',
                                       '                        {% include "form_selection.html" %}',
                                       '                    {% endif %}',
                                       '                    {% comment %} If you want to include datatable or form selection,',
                                       '                                  just add {% include "datatable.html" %} or {% include "form_selection.html" %} {% endcomment %}',
                                       '                </form>',
                                       '                {% include "messages.html" %}',
                                       '            </div>',
                                       '        </div>',
                                       '    </div>',
                                       '</div>',
                                       '{% if datatable_kwargs %}',
                                       '<div class="page-title">',
                                       '     <div class="title_left">',
                                       '         <h3>{% trans "Result" %}</h3>',
                                       '     </div>',
                                       ' </div>',
                                       ' <div class="clearfix"></div>',
                                       ' <div class="row">',
                                       '     <div class="col-md-12 col-sm-12 col-xs-12">',
                                       '         <div class="x_panel">',
                                       '             <div class="x_title">',
                                       '                 <h2>{{VIEW.0}}  <small>({{VIEW.1}})</small></h2>',
                                       '                 <ul class="nav navbar-right panel_toolbox">',
                                       '                     <li><a class="collapse-link"><i class="fa fa-chevron-up"></i></a>',
                                       '                     </li>',
                                       '                 </ul>',
                                       '                 <div class="clearfix"></div>',
                                       '             </div>',
                                       '             <div class="x_content" style="visibility: hidden;" id="result">',
                                       '                 {% include "datatables.html" %}',
                                       '             </div>',
                                       '         </div>',
                                       '     </div>',
                                       ' </div>',
                                       '{% endif %}',
                                       '{% endblock %}',
                                       '',
                                       '{% block script %}',
                                       '{% endblock %}',
                                        ]
             ]
        return 'creation ok'
    return "Apps doesn't exsit"
            

if __name__ == '__main__':
    apps = input("App name :")
    view = input("View name :")
    desc =  input("View desc :")
    create_view(apps,view,desc)
